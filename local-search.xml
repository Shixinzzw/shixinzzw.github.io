<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>腾讯云loT开发（ESP-12F）</title>
    <link href="/2023/02/26/%E8%85%BE%E8%AE%AF%E4%BA%91loT%E5%BC%80%E5%8F%91%EF%BC%88ESP-12F%EF%BC%89/"/>
    <url>/2023/02/26/%E8%85%BE%E8%AE%AF%E4%BA%91loT%E5%BC%80%E5%8F%91%EF%BC%88ESP-12F%EF%BC%89/</url>
    
    <content type="html"><![CDATA[]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>一些有用的东西</title>
    <link href="/2023/02/25/%E4%B8%80%E4%BA%9B%E6%9C%89%E7%94%A8%E7%9A%84%E4%B8%9C%E8%A5%BF/"/>
    <url>/2023/02/25/%E4%B8%80%E4%BA%9B%E6%9C%89%E7%94%A8%E7%9A%84%E4%B8%9C%E8%A5%BF/</url>
    
    <content type="html"><![CDATA[<h2 id="记录一些有用的贴子"><a href="#记录一些有用的贴子" class="headerlink" title="记录一些有用的贴子"></a>记录一些有用的贴子</h2><p>独石电容、瓷片电容、陶瓷电容什么关系？<br><a href="https://www.ednchina.com/news/202003061531.html">https://www.ednchina.com/news/202003061531.html</a></p><p>用Visual Studio 2019 开发stm32，cortex-m3, arm<br><a href="https://blog.csdn.net/u013866683/article/details/103242378">https://blog.csdn.net/u013866683/article/details/103242378</a></p><p>STM32单片机的核心板设计与总结<br><a href="https://www.jianshu.com/p/c90190e93307">https://www.jianshu.com/p/c90190e93307</a></p><p>第七章 STM32核心板PCB设计（布局布线+注意的疑难问题）<br><a href="https://blog.csdn.net/weixin_44917390/article/details/119063237">https://blog.csdn.net/weixin_44917390/article/details/119063237</a></p><p>STM32f407程序移植到GD32F407<br><a href="https://blog.csdn.net/freemote/article/details/119815607">https://blog.csdn.net/freemote/article/details/119815607</a></p><p>电源符号：VCC、VDD、VEE、VSS、VBAT各表示什么意思？<br><a href="https://blog.csdn.net/weibo1230123/article/details/80372998">https://blog.csdn.net/weibo1230123/article/details/80372998</a></p><p>常用元器件的原理图符号和元器件封装汇总<br><a href="https://zhuanlan.zhihu.com/p/337450458">https://zhuanlan.zhihu.com/p/337450458</a></p><p>硬件工程师入门基础知识（一）基础元器件认识（一）<br><a href="https://blog.csdn.net/qq_41600018/article/details/128993041">https://blog.csdn.net/qq_41600018/article/details/128993041</a></p><p>C语言中，全局变量滥用的后果竟如此严重？<br><a href="https://blog.csdn.net/best_xiaolong/article/details/106485002">https://blog.csdn.net/best_xiaolong/article/details/106485002</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>夏季柠檬饮料摆摊销售价值分析</title>
    <link href="/2023/01/07/%E5%A4%8F%E5%AD%A3%E6%9F%A0%E6%AA%AC%E9%A5%AE%E6%96%99%E6%91%86%E6%91%8A%E9%94%80%E5%94%AE%E4%BB%B7%E5%80%BC%E5%88%86%E6%9E%90/"/>
    <url>/2023/01/07/%E5%A4%8F%E5%AD%A3%E6%9F%A0%E6%AA%AC%E9%A5%AE%E6%96%99%E6%91%86%E6%91%8A%E9%94%80%E5%94%AE%E4%BB%B7%E5%80%BC%E5%88%86%E6%9E%90/</url>
    
    <content type="html"><![CDATA[<h2 id="夏季柠檬饮料摆摊销售价值分析"><a href="#夏季柠檬饮料摆摊销售价值分析" class="headerlink" title="夏季柠檬饮料摆摊销售价值分析"></a>夏季柠檬饮料摆摊销售价值分析</h2><p>虽然是在冬季，但是近期本人购买了ARTEASG的柠檬红茶产品，该产品售卖价格为 10 元每杯，其产品如下图:<br><img src="/image/ningmengshui/%E4%BA%A7%E5%93%81%E7%A4%BA%E6%84%8F%E5%9B%BE01.jpg" alt="产品示意图"></p><p>拿到手后，又觉得这东西成本应该很低，10元的售价应该有很大的利润空间，于是就想如果夏季摆摊卖柠檬饮料，应该也能赚点小钱，补贴一下生活费。下面对这个产品的销售和盈利情况进行分析。</p><h3 id="1-项目背景"><a href="#1-项目背景" class="headerlink" title="1. 项目背景"></a>1. 项目背景</h3><p>柠檬饮料是一种常见的饮料，其酸甜的口感和清爽的味道，使得它在夏季的销售量大大增加。分析其销售价值可以展望其利润空间及其销售策略。</p><p>夏季炎热，但是夏季夜晚的街道上的人流量却不少，这是因为夏季的夜晚比较凉爽，人们可以在夜晚散步，享受夜晚的清爽。夏季的夜晚，人们的消费意愿也会增加。因此，夏季的夜晚是柠檬饮料销售的好时机。</p><p><img src="/image/ningmengshui/%E5%A4%9C%E5%B8%82.jpg" alt="夜市场景"></p><p>想象一下这个场景，夏季的夜晚，人们在街道上散步，夏日的晚风吹拂，街道人来人往，突然看到一家柠檬饮料摊点，各色的柠檬饮料，冰爽可口，沁人心脾，总会想去购买一杯，享受一下夏日的清爽。</p><h3 id="2-项目分析"><a href="#2-项目分析" class="headerlink" title="2. 项目分析"></a>2. 项目分析</h3><h4 id="2-1-产品分析"><a href="#2-1-产品分析" class="headerlink" title="2.1 产品分析"></a>2.1 产品分析</h4><p>以我所购买的 500mL 柠檬红茶为例，其主要原料为柠檬、红茶、冰块、糖浆、水、出品杯。一杯柠檬红茶，如果柠檬味要想馥郁，则需要购买香水柠檬，其每杯柠檬克重应不少于 100g ，大致相当于1颗柠檬。现在讨论红茶，红茶一般需要在出摊前一次泡好，且茶汤需要较高的浓度才能使其味道不会被柠檬所掩盖，暂定每杯茶汤为 300mL 。一杯柠檬红茶，糖浆必不可少，500mL 的的容量，大概可以给10 - 20 g左右的糖浆。剩下的 100mL 来自冰块，由于摆摊售卖需要制备大量冰块，因此可以采用制冰机或者冰格冻制两种，制冰机的制冰效率较高，但是制冰机的制冰成本较高，冰格冻制的制冰效率较低，但是制冰成本较低，因此需要根据总体的销售量来确定制冰方法。水的来源可以是自来水，也可以是矿泉水，但是产品质量需要保证则最好使用瓶装水，可以选择怡宝，农夫山泉。出品杯则可以在拼多多等平台上购买。</p><p>500mL 柠檬红茶单杯原料表</p><table><thead><tr><th align="center">原料</th><th align="center">数目</th><th align="center">备注</th></tr></thead><tbody><tr><td align="center">柠檬</td><td align="center">100-150 g</td><td align="center">最好选用香水柠檬</td></tr><tr><td align="center">茶汤</td><td align="center">300-350 mL</td><td align="center">可以多种选择，绿茶，红茶</td></tr><tr><td align="center">糖浆</td><td align="center">10-20 g</td><td align="center"></td></tr><tr><td align="center">冰块</td><td align="center">100 g</td><td align="center">单格10ml 10块</td></tr><tr><td align="center">水</td><td align="center">100 mL</td><td align="center">怡宝，农夫山泉大容量</td></tr><tr><td align="center">出品杯</td><td align="center">1 个</td><td align="center">拼多多等平台购买</td></tr></tbody></table><h4 id="2-2-产品销售成本分析"><a href="#2-2-产品销售成本分析" class="headerlink" title="2.2 产品销售成本分析"></a>2.2 产品销售成本分析</h4><p>下面以出售100杯为例，计算出售100杯500mL柠檬红茶的成本。根据上面讨论的单杯原料表，可以得出售卖100杯需要的原料数目如下表所示。</p><p>100杯 500mL 柠檬红茶单杯原料表</p><table><thead><tr><th align="center">原料</th><th align="center">数目</th><th align="center">合计</th></tr></thead><tbody><tr><td align="center">柠檬</td><td align="center">100-150 g</td><td align="center">20-30斤</td></tr><tr><td align="center">茶汤</td><td align="center">300-350 mL</td><td align="center">4斤</td></tr><tr><td align="center">糖浆</td><td align="center">10-20 g</td><td align="center">2-4斤</td></tr><tr><td align="center">冰块</td><td align="center">100 g</td><td align="center">10 L</td></tr><tr><td align="center">水</td><td align="center">400 mL</td><td align="center">40 L</td></tr><tr><td align="center">出品杯</td><td align="center">1 个</td><td align="center">100 个</td></tr></tbody></table><ol><li>夏季香水柠檬价格：15 元&#x2F;斤</li><li>茶叶价格：大红袍 25 元&#x2F;斤，绿茶 20 元&#x2F;斤</li><li>糖浆价格：12 元&#x2F;斤</li><li>水: 30 元&#x2F; 12.8L</li><li>出品杯： 100 个 50 元</li><li>冰格冻制模具：5层350格 21元。需要1000块，模具两组。</li></ol><p>则可计算出售卖100杯需要的原料成本为：<br>$$<br>15 \times 25 + 25 \times 4 + 12 \times 4 + 30 \times 3 + 50 &#x3D; 663 元<br>$$</p><p>下面计算前期购买保温箱，冰格模具等设备成本：摆摊需要，折叠桌，折叠椅，冰块保温箱，茶汤罐。列表如下<br>摆摊设备清单</p><table><thead><tr><th align="center">原料</th><th align="center">数目</th><th align="center">价格</th></tr></thead><tbody><tr><td align="center">折叠长桌</td><td align="center">1 个</td><td align="center">190 元</td></tr><tr><td align="center">折叠椅</td><td align="center">6 个</td><td align="center"></td></tr><tr><td align="center">冰块保温箱</td><td align="center">1 个</td><td align="center">50 元&#x2F;13 L</td></tr><tr><td align="center">茶汤罐</td><td align="center">4 个</td><td align="center">50元&#x2F;个</td></tr><tr><td align="center">冰格模具</td><td align="center">2 组</td><td align="center">42 元</td></tr></tbody></table><p>则可计算出售卖100杯需要的设备成本为：<br>$$<br>190 + 50 + 50 \times 4 + 42 \times 2 &#x3D;  432 元<br>$$</p><h4 id="2-3-产品销售收入分析"><a href="#2-3-产品销售收入分析" class="headerlink" title="2.3 产品销售收入分析"></a>2.3 产品销售收入分析</h4><p>根据2.2节的成本分析，可知100杯柠檬红茶的成本为 663 元。则每杯柠檬红茶的售价为 663&#x2F;100 &#x3D; 6.63 元。因此销售价格必须高于6.63，且还是在没有考虑分摊设备成本的情况下。由于10元包括及其以上的成本将会减少消费者的购买意愿，因此售价设置为 8 元&#x2F;杯较为合理。与其他奶茶店的价格相差不大，但是和蜜雪冰城等奶茶店相比，价格仍然偏高。因此，可以考虑在某些时候进行团购优惠活动，以吸引更多的消费者。</p><p>对于销售数目的建模，考虑到前期的销售量较小，后期每日销售量会逐渐增加，趋于稳定，估计后期人流稳定为200人&#x2F;天。因此，可以考虑将销售量建模为一个分段模型，如下：<br>$$<br>Sale (date)&#x3D;\left {<br>\begin{aligned}<br>\ 200 \times log_{15}(x+1), date &lt; 15\<br>200, date \geq 15 \<br>\end{aligned}<br>\right.<br>$$</p><p><img src="/image/ningmengshui/%E5%89%8D%E5%8D%81%E5%A4%A9%E9%94%80%E5%94%AE.jpg" alt="前15天销售量"></p><p>再考虑设备成本和前期因售卖情况不佳造成的亏算，综合计算，40天内的总利润为：<br>$$<br>(8-6.63)\times \sum_{date &#x3D; 0}^{40} Sale(date) - (432 + 50 + 50 \times 4 + 42 \times 2) &#x3D; 9,187.05 元<br>$$</p><p>最终可以得到，40天内的总利润为 9,187.05 元，平均每天利润为 229.68 元。但是需要注意的是，这个利润是在没有考虑到其他因素的情况下计算的，因此需要在实际运营中考虑到其他因素，如天气，人流量等。</p><h3 id="3-总结"><a href="#3-总结" class="headerlink" title="3. 总结"></a>3. 总结</h3><p>综合上述内容，可以得到如下结论</p><ol><li>夏季暑期售卖柠檬茶等饮品利润尚可，但需要注意选择人流量密度较高，且柠檬饮料需求较高的地点。</li><li>前期可以不必准备太多的设备，而是根据销售模型来确定出品杯数，以减少前期的亏损。</li><li>产品的价格设置应该在其他奶茶店的价格范围内，且不能过高，以吸引消费者。</li></ol>]]></content>
    
    
    <categories>
      
      <category>Money Making</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Marketing</tag>
      
      <tag>Survey</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>C 注释规范（基于 Doxygen）</title>
    <link href="/2022/11/12/C-%E6%B3%A8%E9%87%8A%E8%A7%84%E8%8C%83%EF%BC%88%E5%9F%BA%E4%BA%8E-Doxygen%EF%BC%89/"/>
    <url>/2022/11/12/C-%E6%B3%A8%E9%87%8A%E8%A7%84%E8%8C%83%EF%BC%88%E5%9F%BA%E4%BA%8E-Doxygen%EF%BC%89/</url>
    
    <content type="html"><![CDATA[]]></content>
    
    
    
    <tags>
      
      <tag>C 语言</tag>
      
      <tag>编程</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>STM32 输出比较（Output Compare）与 PWM 生成（PWM Generation）之比较</title>
    <link href="/2022/11/06/STM32-%E8%BE%93%E5%87%BA%E6%AF%94%E8%BE%83%EF%BC%88Output-Compare%EF%BC%89%E4%B8%8E-PWM-%E7%94%9F%E6%88%90%EF%BC%88PWM-Generation%EF%BC%89%E4%B9%8B%E6%AF%94%E8%BE%83/"/>
    <url>/2022/11/06/STM32-%E8%BE%93%E5%87%BA%E6%AF%94%E8%BE%83%EF%BC%88Output-Compare%EF%BC%89%E4%B8%8E-PWM-%E7%94%9F%E6%88%90%EF%BC%88PWM-Generation%EF%BC%89%E4%B9%8B%E6%AF%94%E8%BE%83/</url>
    
    <content type="html"><![CDATA[]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>程序风格与规范</title>
    <link href="/2022/10/29/%E7%A8%8B%E5%BA%8F%E9%A3%8E%E6%A0%BC%E4%B8%8E%E8%A7%84%E8%8C%83/"/>
    <url>/2022/10/29/%E7%A8%8B%E5%BA%8F%E9%A3%8E%E6%A0%BC%E4%B8%8E%E8%A7%84%E8%8C%83/</url>
    
    <content type="html"><![CDATA[<h2 id="程序风格与规范"><a href="#程序风格与规范" class="headerlink" title="程序风格与规范"></a>程序风格与规范</h2><h3 id="1-注释"><a href="#1-注释" class="headerlink" title="1   注释"></a>1   注释</h3><h3 id="2-变量"><a href="#2-变量" class="headerlink" title="2   变量"></a>2   变量</h3><h3 id="3-接口（函数）"><a href="#3-接口（函数）" class="headerlink" title="3   接口（函数）"></a>3   接口（函数）</h3><h3 id="4-常量"><a href="#4-常量" class="headerlink" title="4   常量"></a>4   常量</h3>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Spice仿真</title>
    <link href="/2022/10/29/Spice%E4%BB%BF%E7%9C%9F/"/>
    <url>/2022/10/29/Spice%E4%BB%BF%E7%9C%9F/</url>
    
    <content type="html"><![CDATA[]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>数字信号处理Chapter01</title>
    <link href="/2022/10/04/%E6%95%B0%E5%AD%97%E4%BF%A1%E5%8F%B7%E5%A4%84%E7%90%86Chapter01/"/>
    <url>/2022/10/04/%E6%95%B0%E5%AD%97%E4%BF%A1%E5%8F%B7%E5%A4%84%E7%90%86Chapter01/</url>
    
    <content type="html"><![CDATA[<h2 id="第一章-离散时间信号与系统"><a href="#第一章-离散时间信号与系统" class="headerlink" title="第一章 离散时间信号与系统"></a>第一章 离散时间信号与系统</h2><h3 id="1-1-符号表示及基础"><a href="#1-1-符号表示及基础" class="headerlink" title="1.1 符号表示及基础"></a>1.1 符号表示及基础</h3><p>离散时间信号通常用序列：<br>$ {x(n)}$ ，$ n $ 为 $ 0,1,2 …$ , $ x(n) $ 表示为序列中第 $ n $ 个样本值。</p><p>$ {·} $ 表示全部样本值的集合</p><p>$ {x*(n)}$ 表示复序列的共轭</p><p>连续时间序列 $ x{t} $ 与离散时间序列 $ {x(n)}$ 的关系：</p><p>$$<br>x(n) &#x3D; x_a(t) |_{t &#x3D; nT} &#x3D;x_a(nT) \tag {1.1}<br>$$<br>其中采样频率$ f_s &#x3D; \frac{1}{T} $（T为采样周期，即两个样本间的时间间隔）</p><p>周期序列表示为 $ \widetilde{x}(n) $<br>其中<br>$$<br>\widetilde{x}(n) &#x3D; x(n+kN) , 0 \leq n \leq N-1 ,k为任意整数 \tag{1.2}<br>$$</p><h4 id="1-1-1-常见典型序列"><a href="#1-1-1-常见典型序列" class="headerlink" title="1.1.1 常见典型序列"></a>1.1.1 常见典型序列</h4><ol><li><p>单位脉冲序列<br>$$<br>\delta (n)&#x3D;\left {<br>\begin{aligned}<br>1, n &#x3D; 0\<br>0, n \neq 0 \<br>\end{aligned}<br>\right. \tag{1.3}<br>$$</p></li><li><p>单位阶跃序列<br>$$<br>u (n)&#x3D;\left {<br>\begin{aligned}<br>1, n \geq 0\<br>0, n &lt; 0 \<br>\end{aligned}<br>\right. \tag{1.4}<br>$$</p></li><li><p>矩形序列<br>$$<br>R_N (n)&#x3D;\left {<br>\begin{aligned}<br>1, n \leq n \leq N-1 \<br>0, n &lt; 0,n \geq N \<br>\end{aligned}<br>\right. \tag{1.5}<br>$$</p></li><li><p>实指数序列<br>$$<br>x(n) &#x3D; a^n u(n) \tag{1.6}<br>$$</p></li></ol><p>$ a \neq 0, |a| &lt; 1 $ 时收敛，$|a| \geq 1$ 时发散</p><ol start="5"><li><p>正弦序列<br>$$<br>x(n) &#x3D; sin(\omega_0n)<br>\tag{1.7}<br>$$<br>$\omega_0$为数字角频率，单位为弧度 $rad$</p></li><li><p>复指数序列</p></li></ol><p>$$x(n) &#x3D; (re^{j\omega_0})^n &#x3D; r^n[cos(\omega_0n)+jsin(\omega_0n)]<br>\tag{1.8}<br>$$</p><h4 id="1-1-2-序列的运算"><a href="#1-1-2-序列的运算" class="headerlink" title="1.1.2 序列的运算"></a>1.1.2 序列的运算</h4><ol><li><p>序列的加法<br>$$<br>z(n) &#x3D; x(n) + y(n) \tag{1.9}<br>$$</p></li><li><p>序列的相乘<br>$$<br>z(n) &#x3D; x(n)  y(n) \tag{1.10}<br>$$</p></li><li><p>序列的位移<br>$$<br>z(n) &#x3D; x(n-n_0) \tag{1.11}<br>$$<br>当 $ n_0 &gt; 0 $ 时 $z(n)$ 是 $ x(n) $ 的延迟；当 $ n_0 &lt; 0 $ 时 $z(n)$ 超前于 $ x(n) $ ；</p></li><li><p>序列的能量及序列的绝对值<br>序列的能量定义为序列样本值的平方和<br>$$<br>S &#x3D; \sum^{\infty}<em>{n &#x3D; -\infty} |x(n)|^2<br>\tag{1.12}<br>$$<br>如果序列 $x(n)$ 满足 $S &lt; \infty$ 则为平方可和序列<br>如果序列满足<br>$$<br>\sum^{\infty}</em>{n &#x3D; -\infty} |x(n)| &lt; \infty \tag{1.13}<br>$$<br>则为绝对可和序列<br>如果序列的每一个样本值的绝对值均小于某一个有限的正整数 $B_x$ 则 $x(n)$ 为有界序列，即<br>$$<br>|x(n)| \leq B_x &lt; \infty<br>\tag{1.14}<br>$$</p></li><li><p>实序列的偶部和奇部<br>任何序列均可以分解成偶对成序列和奇对称序列的和的形式，即<br>$$<br>x(n) &#x3D; x_e(n) + x_o(n)<br>\tag{1.15}<br>$$<br>$x_e(n)$ 和 $x_o(n)$ 分别称为 $x(n)$ 的偶部和基部，其分别等于<br>$$<br>x_e(n) &#x3D; \frac{1}{2}[x(n) + x(-n)]<br>\tag{1.15a}<br>$$<br>$$<br>x_o(n) &#x3D; \frac{1}{2}[x(n) - x(-n)]<br>\tag{1.15b}<br>$$</p></li><li><p>任意序列的单位脉冲表示<br>任一序列 $x(n)$ 都可以表示成单位脉冲序列移位的加权和，即<br>$$<br>x(n) &#x3D; \sum^{\infty}_{m &#x3D; -\infty}x(m)\delta(n-m)<br>\tag{1.16}<br>$$</p></li></ol><h3 id="1-2-离散时间信号的傅里叶变换与-z-变换"><a href="#1-2-离散时间信号的傅里叶变换与-z-变换" class="headerlink" title="1.2 离散时间信号的傅里叶变换与 $ z $ 变换"></a>1.2 离散时间信号的傅里叶变换与 $ z $ 变换</h3><h4 id="1-2-1-离散时间信号的傅里叶变换"><a href="#1-2-1-离散时间信号的傅里叶变换" class="headerlink" title="1.2.1 离散时间信号的傅里叶变换"></a>1.2.1 离散时间信号的傅里叶变换</h4><p>离散时间傅里叶变换 $ DTFT $ (discrete-time Fourier tansform) ,序列的 $DTFT$ 定义为：<br>$$<br>X(e^{j\omega}) &#x3D; \sum^{\infty}<em>{n &#x3D; -\infty}x(n)e^{-j\omega n},\omega &#x3D; \frac{2\pi f}{f_S}<br>\tag{1.17}<br>$$<br>式中， $ \omega $ 为数字角频率，它是频率 $f$ 对采样频率 $f_s$ 作归一化后的角频率。<br>$X(e^{j\omega})$ 时 $\omega$ 的连续函数，且周期为 $2\pi$<br>式（$1.17$）级数不一定总是收敛的，当 $x(n)$ 绝对可和时，它的 $DTFT$ 一定存在。<br>离散时间信号的傅里叶逆变换（$IDTFT$）：<br>$$<br>x(n) &#x3D; \frac{1}{2\pi}\int</em>{-\pi}^{\pi} X(e^{j\omega})e^{j\omega m} d\omega<br>\tag{1.18}<br>$$<br>$x(n)$ 和 $X(e^{j\omega})$ 对应关系可表示为：$X(e^{j\omega}) &#x3D; DTFT[x(n)]$ ,$x(n)&#x3D;IDTFT[X(e^{j\omega})]$</p><p>$X(e^{j\omega})$ 的几种表示方法：<br>$$<br>X(e^{j\omega}) &#x3D; Re[X(e^{j\omega})]+jIm[X(e^{j\omega})] &#x3D; |X(e^{j\omega})|e^{j\phi(\omega)}<br>\tag{1.19}<br>$$<br>$Re[·]$ 和 $Im[·]$ 表示取实部和虚部。<br>$|X(e^{j\omega})|$ 为离散序列 $x(n)$ 的幅度谱，$\phi(\omega)$为离散序列的相位谱。</p><p>$DTFT$ 的主要特性</p><table><thead><tr><th align="center">序列</th><th align="center">$DTFT$</th></tr></thead><tbody><tr><td align="center">$ax(n)+by(n)$</td><td align="center">$aX(e^{j\omega})+Y(e^{j\omega})$</td></tr><tr><td align="center">$x^*(n)$</td><td align="center">$X^*(e^{-j\omega})$</td></tr><tr><td align="center">$x^*(-n)$</td><td align="center">$X^*(e^{j\omega})$</td></tr><tr><td align="center">$x(n-n_0)$</td><td align="center">$e^{-jn_0\omega}X(e^{j\omega})$</td></tr><tr><td align="center">$e^{j\omega_0 n}x(n)$</td><td align="center">$X(e^{j(\omega - \omega_0)})$</td></tr><tr><td align="center">$Re[x(n)]$</td><td align="center">$X_e(e^{j\omega})$  [$X(e^{j\omega})$ 的共轭偶对称部分]</td></tr><tr><td align="center">$jIm[x(n)]$</td><td align="center">$X_o(e^{j\omega})$ [$X(e^{j\omega})$ 的共轭奇对称部分]</td></tr><tr><td align="center">$x(n)$ 为实序列</td><td align="center">$X(e^{j\omega}) &#x3D; X^*(e^{-j\omega})$</td></tr><tr><td align="center"></td><td align="center">$Re[X(e^{j\omega})] &#x3D; Re[X(e^{-j\omega})]$</td></tr><tr><td align="center"></td><td align="center">$Im[X(e^{j\omega})] &#x3D; -Im[X(e^{-j\omega})]$</td></tr><tr><td align="center"></td><td align="center">$arg[X(e^{j\omega})] &#x3D; -arg[X(e^{-j\omega})]$</td></tr><tr><td align="center">$x_e(n)$ [$x(n)$ 的共轭偶对称部分]</td><td align="center">$Re[X(e^{j\omega})]$</td></tr><tr><td align="center">$x_o(n)$  [$x(n)$ 的共轭偶奇称部分]</td><td align="center">$jIm[X(e^{j\omega})]$</td></tr></tbody></table><h4 id="1-2-2-z-变换"><a href="#1-2-2-z-变换" class="headerlink" title="1.2.2 $z$变换"></a>1.2.2 $z$变换</h4><p>序列 $x(n)$ 的 $z$ 变换定义为：<br>$$<br>X(z) &#x3D; \sum^{\infty}<em>{n &#x3D; -\infty}x(n)z^{-n} ,(n &#x3D; 0时为单边z变换)<br>\tag{1.20}<br>$$<br>上式中 $z$ 为复变量，也可记为 $\mathscr{Z}[x(n)] &#x3D; X(z)$<br>对于所有的序列或所有的 $z$ 值，$z$变换并不总是收敛，使 $z$ 变换收敛的 $z$ 值的集合称作收敛区域，一般为 $z$ 平面上的一个环形区域，该区域为:<br>$$<br>R</em>{x^-} &lt;|z|&lt;R_{x^+}<br>\tag{1.21}<br>$$<br>其中 $R_{x^-}$ 可以小到0，$R_{x^+}$ 可以大到 $\infty$</p><p>以下讨论几种序列的收敛域</p><ol><li><p>有限长序列<br>仅有有限个数的序列值是非零值，从而有:<br>$$<br>X(z) &#x3D; \sum^{n_2}_{n &#x3D; n_1} x(n) z^{-n}<br>\tag{1.22}<br>$$<br>其中 $n_1,n_2$ 为有限整数，分别为 $x(n)$ 的起点和终点。除了当 $n_1 &lt; 0$ 时 $z &#x3D; \infty$ 以及 $n_2&gt;0$ 时 $z&#x3D;0$ 之外， $z$ 所在的区域均收敛，即有限长序列的收敛区域至少是：<br>$$<br>0&lt;|z|&lt;\infty<br>$$<br>其收敛区域可能包括 $z&#x3D;0$ 或包括 $z&#x3D;\infty$</p></li><li><p>右边序列<br>右边序列为 $n&lt;n_1$ 时 $x(n)&#x3D;0$ 的序列， $z$ 变换为：<br>$$<br>X(z) &#x3D; \sum^{\infty}<em>{n &#x3D; n_1} x(n) z^{-n}<br>\tag{1.23}<br>$$<br>右边序列的收敛域是一个半径为 $R_{x^-}$ 的圆的外部，即：<br>$$<br>|Z|&gt;R</em>{x^-}<br>$$<br>当 $n_1 \geq 0$ 时 $z$ 变换在 $z &#x3D; \infty$ 处收敛，反之 $n_1 &lt; 0$ 时 $z$ 变换在 $z &#x3D; \infty$ 处将不收敛</p></li><li><p>左边序列<br>左边序列为 $n &gt; n_2$ 时 $x(n)&#x3D;0$ 的序列， $z$ 变换为：<br>$$<br>X(z) &#x3D; \sum^{n_2}<em>{n &#x3D; -\infty} x(n) z^{-n}<br>\tag{1.24}<br>$$<br>左边序列的收敛域是一个半径为 $R</em>{x^-}$ 的圆的内部，即：<br>$$<br>|z|&lt;R_{x^+}<br>$$<br>若$n_2 &lt; 0$ 则左边序列的 $z$ 变换在 $z &#x3D; 0$ 处将收敛</p></li><li><p>双边序列<br>双边序列可视为一个左边序列与一个右边序列之和，其 $z$ 变换的收敛域就是这两个序列 $z$ 变换的公共收敛区间<br>$$<br>X(z) &#x3D; \sum^{\infty}<em>{n &#x3D; -\infty}x(n)z^{-n} &#x3D;\sum^{\infty}</em>{n &#x3D; 0} x(n) z^{-n} + \sum^{-1}<em>{n &#x3D; -\infty} x(n) z^{-n}<br>\tag{1.25}<br>$$<br>第一个级数是右边序列，对 $|z|&gt;R</em>{x^-}$ 收敛；第二个级数是左边序列，对 $|z|&lt;R_{x^+}$ 。<br>若 $R_{x^-} &lt; R_{x^+}$ ，则有一个形式为：<br>$$<br>R_{x^-} &lt;|z|&lt; R_{x^+}<br>$$<br>的公共收敛区域。若 $R_{x^-} &gt; R_{x^+}$ ，则没有公共收敛区域，因此式（1.25）不能收敛。</p></li></ol><h4 id="1-2-3-逆-z-变换"><a href="#1-2-3-逆-z-变换" class="headerlink" title="1.2.3 逆$z$变换"></a>1.2.3 逆$z$变换</h4><p>已知函数 $X(z)$ 及其收敛域，反求序列的变换，其表示及变换关系式（柯西积分定理推导）为：<br>$$<br>x(n) &#x3D; \mathscr{Z}^{-1}[X(z)] &#x3D; \frac{1}{2\pi j} \oint_C X(z)z^{n-1}dz<br>\tag{1.26}<br>$$<br>式中 $C$ 为 $X(z)$ 收敛域内的一条逆时针方向绕原点的闭合曲线</p><h4 id="1-2-4-z-变换的性质"><a href="#1-2-4-z-变换的性质" class="headerlink" title="1.2.4 $z$变换的性质"></a>1.2.4 $z$变换的性质</h4><p>$z$变换特性表</p><table><thead><tr><th align="center">序列</th><th align="center">$z$ 变换</th><th align="center">收敛域</th></tr></thead><tbody><tr><td align="center">$x(n)$</td><td align="center">$X(z)$</td><td align="center">$ R_{x^-} &lt;|z|&lt; R_{x^+} $</td></tr><tr><td align="center">$y(n)$</td><td align="center">$Y(z)$</td><td align="center">$ R_{y^-} &lt;|z|&lt; R_{y^+} $</td></tr><tr><td align="center">$ax(n)+bx(n)$</td><td align="center">$aX(z)+bY(z)$</td><td align="center">$max[R_{x^-},R_{y^-}] &lt;|z|&lt; min[R_{x^+},R_{y^+}]$</td></tr><tr><td align="center">$x(n+n_0)$</td><td align="center">$z^{n_0}X(z)$</td><td align="center">$ R_{x^-} &lt;|z|&lt; R_{x^+} $</td></tr><tr><td align="center">$a^nx(n)$</td><td align="center">$X(a^{-1}z)$</td><td align="center">$|a|R_{x^-} &lt;|z|&lt; |a|R_{x^+}$</td></tr><tr><td align="center">$nx(n)$</td><td align="center">$-z\frac{dX(z)}{dz}$</td><td align="center">$ R_{x^-} &lt;|z|&lt; R_{x^+} $</td></tr><tr><td align="center">$x^*(n)$</td><td align="center">$X^*(z^*)$</td><td align="center">$ R_{x^-} &lt;|z|&lt; R_{x^+} $</td></tr><tr><td align="center">$x(-n)$</td><td align="center">$X(\frac{1}{z})$</td><td align="center">$\frac{1}{R_{x^+}} &lt;|z|&lt; \frac{1}{R_{x^-}}$</td></tr><tr><td align="center">$x(n)*y(n)$</td><td align="center">$X(z)Y(z)$</td><td align="center">$max[R_{x^-},R_{y^-}] &lt;|z|&lt; min[R_{x^+},R_{y^+}]$</td></tr><tr><td align="center">$x(n)y(n)$</td><td align="center">$\frac{1}{2\pi j}\oint_CX(v)Y(\frac{z}{v})v^{-1}dv$</td><td align="center">$R_{x^-}R_{y^-} &lt;|z|&lt; R_{x^+}R_{y^+}$</td></tr><tr><td align="center">$x(0) &#x3D; X(\infty)$</td><td align="center"></td><td align="center">$|z|&gt;R_{x^-}$</td></tr><tr><td align="center">$x(\infty) &#x3D; Res[X(z),1]$</td><td align="center"></td><td align="center">$(z-1)X(z)收敛于|z|\geq 1 $</td></tr></tbody></table><h4 id="1-2-5-z-变换与-DTFT-的关系"><a href="#1-2-5-z-变换与-DTFT-的关系" class="headerlink" title="1.2.5 $z$变换与$DTFT$的关系"></a>1.2.5 $z$变换与$DTFT$的关系</h4><p>$$<br>X(z)|<em>{z &#x3D; e^{j\omega}} &#x3D;\sum^{\infty}</em>{n&#x3D;-\infty}x(n)e^{-jn\omega}<br>\tag{1.27}<br>$$<br>当 $z &#x3D; e^{j\omega}$ 时，$z$ 变换与 $DTFT$ 相等，即采样序列单位圆上的$z$变换就等于该序列的$DTFT$<br>由于$e^{j\omega} &#x3D; e^{j(\omega + 2k\pi)}$ ,所以 $X(e^{j\omega})$ 是以 $2\pi$ 为周期的周期函数， $z$ 平面单位圆上一周正好对应 $X(e^{j\omega})$ 的一个周期。</p><h4 id="1-2-6-Parseval-定理"><a href="#1-2-6-Parseval-定理" class="headerlink" title="1.2.6 Parseval 定理"></a>1.2.6 Parseval 定理</h4><p>设两个序列 $x(n),y(n)$ 则Paseval定理为：<br>$$<br>\sum^{\infty}_{n&#x3D;-\infty}x(n)y^*(n)&#x3D;\frac{1}{2\pi j}\oint_CX(v)Y^*(\frac{1}{v^*})v^{-1}dv<br>\tag{1.28}<br>$$</p><p>上式中，积分围线取在 $X(v)$ 和 $Y^*(\frac{1}{v^*})$ 的收敛区域的交叠范围内。<br>Parseval定理的一个很重要的应用式计算序列的能量：</p><p>$$<br>\sum^{\infty}<em>{n&#x3D;-\infty}|x(n)|^2 &#x3D; \sum^{\infty}</em>{n&#x3D;-\infty}x(n)x^*(n)&#x3D;\frac{1}{2\pi}\int^\pi_{-\pi}X(e^{j\omega})X^*(e^{j\omega})d\omega &#x3D; \frac{1}{2\pi}\int^\pi_{-\pi}|X(e^{j\omega})|^2d\omega<br>\tag{1.29}<br>$$</p><h3 id="1-3-离散时间系统"><a href="#1-3-离散时间系统" class="headerlink" title="1.3 离散时间系统"></a>1.3 离散时间系统</h3><p>离散时间系统在数学上定义为将输入序列 $x(n)$ 映射成输出序列 $y(n)$ 的唯一性变换或运算，或者说将一个序列变换成另一个序列的系统。表示为：<br>$$<br>y(n) &#x3D; T[x(n)]<br>\tag{1.30}<br>$$</p><pre><code class=" mermaid">graph LR;    A[&quot;输入序列x(n)&quot;] --&gt; B[&quot;运算T[·]&quot;];    B --&gt; C[&quot;输出序列y(n)&quot;];</code></pre><p>算子 $T[·]$ 表示种种约束条件。</p><h4 id="1-3-1-线性系统（Linear-system）"><a href="#1-3-1-线性系统（Linear-system）" class="headerlink" title="1.3.1 线性系统（Linear system）"></a>1.3.1 线性系统（Linear system）</h4><p>满足叠加原理的系统具有线性特性。即若对两个激励 $x_1(n)$ 和 $x_2(n)$ 有：<br>$$<br>T[ax_1(n)+bx_2(n)] &#x3D; aT[x_1(n)]+bT[x_2(n)],a,b为任意常数<br>\tag{1.31}<br>$$<br>线性系统满足叠加性原理，不满足上述关系的为非线性系统。</p><pre><code class=" mermaid">graph LR    A[&quot;x1(n)&quot;] --&gt; B[&quot;T[·]&quot;]    B --&gt; C[&quot;y1(n)&quot;]    X[&quot;x2(n)&quot;] --&gt; Y[&quot;T[·]&quot;]    Y --&gt; Z[&quot;y2(n)&quot;]    M[&quot;ax1(n)+bx2(n)&quot;] --&gt; L[&quot;T[·]&quot;]    L --&gt; N[&quot;ay1(n)+by2(n)&quot;]</code></pre><h4 id="1-3-2-时不变（time-invariant）系统"><a href="#1-3-2-时不变（time-invariant）系统" class="headerlink" title="1.3.2 时不变（time-invariant）系统"></a>1.3.2 时不变（time-invariant）系统</h4><p>时不变系统就是系统的参数不随时间而变化，不管输入信号作用的时间先后，输出信号响应的形状均相同，仅出现的时间不同。<br>$$<br>T[x(n)] &#x3D; y(n)<br>T[x(n-n_0)] &#x3D; y(n - n_0)<br>\tag{1.32}<br>$$</p><pre><code class=" mermaid">graph LR    A[&quot;x(n)&quot;] --&gt; B[&quot;T[·]&quot;]    B --&gt; C[&quot;y(n)&quot;]    X[&quot;x(n-n0)&quot;] --&gt; Y[&quot;T[·]&quot;]    Y --&gt; Z[&quot;y(n-n0)&quot;]</code></pre><h4 id="1-3-3-线性时不变（linear-time-invariant-LTI）系统"><a href="#1-3-3-线性时不变（linear-time-invariant-LTI）系统" class="headerlink" title="1.3.3 线性时不变（linear time-invariant, LTI）系统"></a>1.3.3 线性时不变（linear time-invariant, LTI）系统</h4><h4 id="1-3-4-稳定系统（stable-system）和因果系统（causal-system）"><a href="#1-3-4-稳定系统（stable-system）和因果系统（causal-system）" class="headerlink" title="1.3.4 稳定系统（stable system）和因果系统（causal system）"></a>1.3.4 稳定系统（stable system）和因果系统（causal system）</h4><p>只要输入序列是有界的，其输出必定是有界的，这样的系统称为稳定系统，稳定系统的充要条件是其单位脉冲响应绝对可和，即：<br>$$<br>\sum^{\infty}_{n&#x3D;-\infty}|h(n)|&lt;\infty<br>$$</p><p>因果系统，就是系统的输出只取决于此时以及此时以前的输入（ $x(n),x(n-1),x(n-2)…$ 等）<br>一个线性时不变系统是因果系统的充要条件是<br>$$<br>h(n) \equiv 0,n&lt;0<br>$$<br>通常将 $n&lt;0$ 时等于 $0$ 的序列称为因果序列。</p>]]></content>
    
    
    <categories>
      
      <category>Learn</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Review</tag>
      
      <tag>Math</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>C语言程序中变量的作用域问题</title>
    <link href="/2022/07/14/%E4%B8%80%E4%BA%9B%E5%85%B3%E4%BA%8EC%E8%AF%AD%E8%A8%80%E7%A8%8B%E5%BA%8F%E4%B8%AD%E5%8F%98%E9%87%8F%E7%9A%84%E4%BD%9C%E7%94%A8%E5%9F%9F%E9%97%AE%E9%A2%98/"/>
    <url>/2022/07/14/%E4%B8%80%E4%BA%9B%E5%85%B3%E4%BA%8EC%E8%AF%AD%E8%A8%80%E7%A8%8B%E5%BA%8F%E4%B8%AD%E5%8F%98%E9%87%8F%E7%9A%84%E4%BD%9C%E7%94%A8%E5%9F%9F%E9%97%AE%E9%A2%98/</url>
    
    <content type="html"><![CDATA[<h2 id="C语言程序中变量的作用域问题"><a href="#C语言程序中变量的作用域问题" class="headerlink" title="C语言程序中变量的作用域问题"></a>C语言程序中变量的作用域问题</h2><p>在使用C语言编写程序时，根据不同程序的要求，有时对于程序内部的数据传递，数据处理，数据使用等问题上会有很多要求。例如，在程序模块化设计时，各个模块尽量需要可以封装起来，方便使用，同时函数内部的数据会有两种不同的需求。<br>第一种则是尽量希望模块内部的数据不被访问，只传递输出结果即可，或者是希望每次函数被调用后，能够释放掉内部使用的内存空间。<br>第二种情况就是函数内部的数据不被释放，能够在调用后存留下来，在循环或者重复调用时其中的数据能给予上次调用的基础上继续更改，甚至希望可以调用其内部的数据。<br>对于上述的两个问题或者说是要求，就需要了解C语言程序中变量的作用域的问题。本文将通过诸多例程来厘清这其中的关系。</p><h3 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h3>]]></content>
    
    
    <categories>
      
      <category>C\C++</category>
      
    </categories>
    
    
    <tags>
      
      <tag>C</tag>
      
      <tag>Coding</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>增量式PID介绍（Python语言实现）</title>
    <link href="/2022/07/08/%E5%A2%9E%E9%87%8F%E5%BC%8FPID%E4%BB%8B%E7%BB%8D%E5%8F%8APython%E8%AF%AD%E8%A8%80%E5%AE%9E%E7%8E%B0/"/>
    <url>/2022/07/08/%E5%A2%9E%E9%87%8F%E5%BC%8FPID%E4%BB%8B%E7%BB%8D%E5%8F%8APython%E8%AF%AD%E8%A8%80%E5%AE%9E%E7%8E%B0/</url>
    
    <content type="html"><![CDATA[<h2 id="增量式PID介绍及Python语言实现"><a href="#增量式PID介绍及Python语言实现" class="headerlink" title="增量式PID介绍及Python语言实现"></a>增量式PID介绍及Python语言实现</h2><h3 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h3><p>本文主要记录在电子设计大赛训练时，做电源时需要对电路中某些输出量进行稳定控制，PID控制算法可以很好的实现该功能，其中增量式更符合对电源的电压电流量的控制。本文主要粗略对其进行介绍再使用Python实现一个电压输出稳定控制</p><span id="more"></span><h3 id="1-增量式PID算法介绍"><a href="#1-增量式PID算法介绍" class="headerlink" title="1.增量式PID算法介绍"></a>1.增量式PID算法介绍</h3><p>以下仅限与对增量式PID控制算法的介绍，对于PID控制算法的概述（General Introduction）见“PID控制器入门概要”</p><p>增量式PID控制将当前时刻的控制量和上一时刻的控制量做差，以差值为新的控制量，是一种递推式的算法。</p><p>其公式表示为：<br>$$<br>\Delta u(k) &#x3D; K_p (e(k) - e(k-1)) + K_i e(k) + K_d(e(k) - 2e(k-1) + e(k-2)) \tag{1}<br>$$<br>其中:</p><ul><li>$K_p$为比例系数</li><li>$K_i$为积分系数</li><li>$K_d$为微分系数</li></ul><p>因此若要使用增量式PID算法需要保存$e(k-1),e(k-2)$两个时刻的输出值，在加上输出回馈值$e(k)$的积分<br>注意：增量式PID的运算结果为$u(k)$同$u(k-1)$之间的差值，因此输出结果需叠加，即为：<br>$$<br>u(k) &#x3D; u(k-1) + \Delta(k)<br>$$<br><img src="/image/pidzengliang/zengliangpid.png" alt="增量PID流程框图"><br>厘清$u(k),u(k-1),\Delta u,e(k),e(k-1),e(k-2)$</p><h3 id="2-使用Python语言进行实现"><a href="#2-使用Python语言进行实现" class="headerlink" title="2.使用Python语言进行实现"></a>2.使用Python语言进行实现</h3><p>下面使用Python语言进行展示，得到输出曲线<br>假设如下案例，现有一DCDC升压（BOOST）电路，需要将15V的初始电压提升到30V，控制方式为驱动MOS管周期内导通与关断时间比值即可。但现在只关注电压输入与控制后输出的结果，不考虑PWM占空比，定时器计数等问题。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><code class="hljs Python"><span class="hljs-comment"># 名称：PID算法（增量式）</span><br><span class="hljs-comment"># 作者：Shixin</span><br><span class="hljs-comment"># 更新时间：2022.07.08 21.55</span><br><span class="hljs-comment"># 版本: 1.0</span><br><span class="hljs-keyword">import</span> numpy<br><span class="hljs-keyword">import</span> pandas<br><span class="hljs-keyword">import</span> matplotlib.pyplot<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">main</span>():<br>    Setpoint = <span class="hljs-number">30.0</span><br>    out = <span class="hljs-number">0.0</span><br>    k_p = <span class="hljs-number">0.05</span><br>    k_i = <span class="hljs-number">0.2</span><br>    k_d = <span class="hljs-number">0.1</span><br>    e_k1 = <span class="hljs-number">0.0</span><br>    e_k2 = <span class="hljs-number">0.0</span><br>    time = <span class="hljs-built_in">range</span>(<span class="hljs-number">1</span>, <span class="hljs-number">50</span>, <span class="hljs-number">1</span>)<br>    output = numpy.arange(<span class="hljs-number">1.0</span>, <span class="hljs-number">51.0</span>, <span class="hljs-number">1.0</span>)<br><br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> time:<br>        e_k = Setpoint - out<br>        outk = k_p * (e_k - e_k1) + k_i * e_k + k_d * (e_k - <span class="hljs-number">2</span> * e_k1 + e_k2)<br>        e_k2 = e_k1<br>        e_k1 = e_k<br>        out = out + outk<br>        <span class="hljs-built_in">print</span>(out)<br>        output[i] = out<br><br>    matplotlib.pyplot.plot(<span class="hljs-built_in">range</span>(<span class="hljs-number">1</span>, <span class="hljs-number">51</span>, <span class="hljs-number">1</span>), output)<br>    matplotlib.pyplot.show()<br><br>    <span class="hljs-built_in">print</span>(output)<br><br><span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">&#x27;__main__&#x27;</span>:<br>    main()<br><br></code></pre></td></tr></table></figure><p>通过不断改变$K_p,K_i,K_d$三个值最终可以得到一个十分合适的输出曲线：<br><img src="/image/pidzengliang/pidout.png" alt="PID输出曲线"><br>观察该曲线可以发现系统可以很达到了稳定状态，且到达稳定点的时间也很快<br>观察如下数值结果：<br><img src="/image/pidzengliang/pidshuzhijieguo.png" alt="PID输出数值结果"><br>可以看到在数值上达到预期值的效果也十分理想，误差小于0.001</p><h3 id="3-其他的一些问题"><a href="#3-其他的一些问题" class="headerlink" title="3.其他的一些问题"></a>3.其他的一些问题</h3><p>当我在做DC-DC电源转换器直流稳压源时，发现由于系统反应过于迅速以至于转换器来不及反应导致系统无法达到预期目的，因此需要将参数调小并留有一定的系统反应时间。</p>]]></content>
    
    
    <categories>
      
      <category>Control</category>
      
      <category>Python</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Control</tag>
      
      <tag>Python</tag>
      
      <tag>PID</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
